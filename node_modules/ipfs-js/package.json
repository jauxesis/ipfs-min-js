{
  "_args": [
    [
      {
        "raw": "ipfs-js",
        "scope": null,
        "escapedName": "ipfs-js",
        "name": "ipfs-js",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/auxesis/Documents/test/ipfsapp"
    ]
  ],
  "_from": "ipfs-js@latest",
  "_id": "ipfs-js@0.0.11",
  "_inCache": true,
  "_location": "/ipfs-js",
  "_nodeVersion": "4.2.2",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/ipfs-js-0.0.11.tgz_1468345622557_0.11929090553894639"
  },
  "_npmUser": {
    "name": "ckeenan",
    "email": "ckeenan89@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ipfs-js",
    "scope": null,
    "escapedName": "ipfs-js",
    "name": "ipfs-js",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ipfs-js/-/ipfs-js-0.0.11.tgz",
  "_shasum": "54822f2927ce21d7ab44756f621ae537dd5ed475",
  "_shrinkwrap": null,
  "_spec": "ipfs-js",
  "_where": "/home/auxesis/Documents/test/ipfsapp",
  "author": {
    "name": "ConsenSys"
  },
  "authors": [
    "Jeff Scott Ward",
    "Christian Lundkvist",
    "Connor Keenan"
  ],
  "browserify": {
    "transform": [
      "brfs"
    ]
  },
  "bugs": {
    "url": "https://github.com/ConsenSys/ipfs.js/issues"
  },
  "dependencies": {
    "bitcore": "^0.13.0",
    "concat-stream": "^1.5.0",
    "ipfs-api": "git+https://github.com/ckeenan/node-ipfs-api.git#concat-bin@2.3.2",
    "vinyl": "^0.5.1"
  },
  "description": "Helper methods for ipfs-api",
  "devDependencies": {
    "brfs": "^1.4.1",
    "browserify": "^11.0.1",
    "chai": "^3.2.0",
    "ipfsd-ctl": "0.3.3",
    "mocha": "^2.2.5",
    "uglify-js": "^2.4.24"
  },
  "directories": {},
  "dist": {
    "shasum": "54822f2927ce21d7ab44756f621ae537dd5ed475",
    "tarball": "https://registry.npmjs.org/ipfs-js/-/ipfs-js-0.0.11.tgz"
  },
  "gitHead": "1d0d0ff89697a859092bb9382c3867fe9bcd3487",
  "homepage": "https://github.com/ConsenSys/ipfs.js",
  "keywords": [
    "ipfs"
  ],
  "license": "ISC",
  "main": "ipfs.js",
  "maintainers": [
    {
      "name": "ckeenan",
      "email": "ckeenan89@gmail.com"
    }
  ],
  "name": "ipfs-js",
  "optionalDependencies": {},
  "readme": "# ipfs.js\n\nWrapper for [node-ipfs-api](https://github.com/ipfs/node-ipfs-api)\n\n## Browser friendly\n\nRun `npm install ipfs-js`\n\nOr reference `dist/ipfs.min.js` inside a `<script />` to expose the global `ipfs`\n\n## Example\n\n### 1) Set IPFS CORS access\n\n       ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]'\n       ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"GET\", \"POST\"]'\n       ipfs config --json API.HTTPHeaders.Access-Control-Allow-Credentials '[\"true\"]'\n\n### 2) Start IPFS\n\n       ipfs daemon\n\n### 3) Upload example directory\n\n`git clone https://github.com/ConsenSys/ipfs.js && cd ipfs.js`\n\nFor non-default ipfs configurations, you can run `./example.url` to `ipfs add -r example` and print the local gateway's url\n\n### 4) Open IPFS gateway\n\nNavigate to the url echoed from `./example.url` in the browser, or run `./example.url | xargs open` to open it on OSX\n\n## Methods\n\n#### `ipfs.setProvider({host: 'localhost', port: '5001'})`\n\n* _localhost_ and _5001_ are the defaults when calling without arguments\n* is also equivalent to `ipfs.setProvider({host: '/ip4/127.0.0.1/tcp/5001'})`\n\n### `ipfs.setProvider(require('ipfs-api')('localhost', '5001'))`\n\nnode.js compatibility for ipfs.js\n\n\n#### `ipfs.add(textOrBuffer, callback)`\n\n\tipfs.add(\"Testing...\", function(err, hash) {\n\t\tif (err) throw err; // If connection is closed\n\t\tconsole.log(hash); \t// \"Qmc7CrwGJvRyCYZZU64aPawPj7CJ56vyBxdhxa38Dh1aKt\"\n\t});\n\n\n#### `ipfs.cat(hash, callback)`\n\n\tipfs.cat(\"Qmc7CrwGJvRyCYZZU64aPawPj7CJ56vyBxdhxa38Dh1aKt\", function(err, buffer) {\n\t\tif (err) throw err;\n\t\tconsole.log(buffer.toString()); \t// \"Testing...\"\n\t});\n\n#### `ipfs.catText(hash, callback)`\n\n\tipfs.cat(\"Qmc7CrwGJvRyCYZZU64aPawPj7CJ56vyBxdhxa38Dh1aKt\", function(err, text) {\n\t\tif (err) throw err;\n\t\tconsole.log(text); \t// \"Testing...\"\n\t});\n\t\n#### `ipfs.addJson(json, callback)`\n\n#### `ipfs.catJson(hash, callback)`\n\n#### `ipfs.api.*`  - all methods from node-ipfs-api\n\n#### `ipfs.utils.base58ToHex(base58)`\n#### `ipfs.utils.hexToBase58(hex)`\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ConsenSys/ipfs.js.git"
  },
  "scripts": {
    "build": "browserify -s ipfs -e ./ipfs.js | tee dist/ipfs.js | ./node_modules/.bin/uglifyjs -m > dist/ipfs.min.js && cp dist/ipfs.js example/",
    "test": "mocha"
  },
  "version": "0.0.11"
}
